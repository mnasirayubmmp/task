{"ast":null,"code":"import { switchMap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass MasterService {\n  constructor(http) {\n    this.http = http;\n  }\n  fetchUserPosts() {\n    return this.http.get('https://jsonplaceholder.typicode.com/users').pipe(switchMap(users => {\n      const firstUserId = users[0].id;\n      return this.http.get(`https://jsonplaceholder.typicode.com/posts?userId=${firstUserId}`);\n    }));\n  }\n  static #_ = this.ɵfac = function MasterService_Factory(t) {\n    return new (t || MasterService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MasterService,\n    factory: MasterService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { MasterService };","map":{"version":3,"names":["switchMap","MasterService","constructor","http","fetchUserPosts","get","pipe","users","firstUserId","id","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["D:\\Workspace\\Practice\\task\\task\\src\\app\\master.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, switchMap } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MasterService {\n\n  constructor(private http: HttpClient) { }\n\n  fetchUserPosts(): Observable<any> {\n    return this.http.get<any[]>('https://jsonplaceholder.typicode.com/users').pipe(\n      switchMap(users => {\n        const firstUserId = users[0].id;\n        return this.http.get<any[]>(`https://jsonplaceholder.typicode.com/posts?userId=${firstUserId}`);\n      })\n    );\n  }\n\n}\n"],"mappings":"AAEA,SAAqBA,SAAS,QAAQ,MAAM;;;AAE5C,MAGaC,aAAa;EAExBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAQ,4CAA4C,CAAC,CAACC,IAAI,CAC5EN,SAAS,CAACO,KAAK,IAAG;MAChB,MAAMC,WAAW,GAAGD,KAAK,CAAC,CAAC,CAAC,CAACE,EAAE;MAC/B,OAAO,IAAI,CAACN,IAAI,CAACE,GAAG,CAAQ,qDAAqDG,WAAW,EAAE,CAAC;IACjG,CAAC,CAAC,CACH;EACH;EAAC,QAAAE,CAAA,G;qBAXUT,aAAa,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbd,aAAa;IAAAe,OAAA,EAAbf,aAAa,CAAAgB,IAAA;IAAAC,UAAA,EAFZ;EAAM;;SAEPjB,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}